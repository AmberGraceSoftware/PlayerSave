[{"title":"PlayerSave","type":0,"sectionRef":"#","url":"/docs/intro","content":"PlayerSave danger PlayerSave is still a work in progress and does not currently have a full release! Please avoiding PlayerSave in production-bound projects, as the library is not fully tested, and the API may be subject to change","keywords":""},{"title":"PlayerSave","type":0,"sectionRef":"#","url":"/api/PlayerSave","content":"On this page PlayerSave warning PlayerSave is still a work in progress and does not currently have a full release! Please avoiding PlayerSave in production-bound projects, as the library is not fully tested, and the API may be subject to change PlayerSave is a holistic library that handles storing, replicating, and observing player data in a simple and fault-tolerant way. PlayerSave provides a number of key Mechanisms that can be configured to the needs of a project. PlayerSave is designed to function as expected without much configuration out-of-the-gate, but you should also read the documentation to customize your configuration depending on the features your game includes (for example, trading). For more information, see the Usage Guide","keywords":""},{"title":"Mechanisms","type":0,"sectionRef":"#","url":"/docs/mechanisms","content":"","keywords":""},{"title":"PlayerSave Mechanisms Overview:â€‹","type":1,"pageTitle":"Mechanisms","url":"/docs/mechanisms#playersave-mechanisms-overview","content":"Exit SavesAuto SavesData ReplicationSave RetriesPlace Teleport ToleranceBindToCloseTrade TransactionsData MigrationLoggingDebugger info This documentation page is currently in progress "}]